/**
 * Product Catalog Management
 * ## TMF API Reference: TMF620 - Product Catalog Management  ### Release : 20.5 - March 2021  Product Catalog API is one of Catalog Management API Family. Product Catalog API goal is to provide a catalog of products.   ### Operations Product Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * OpenAPI spec version: 4.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import {CategoryRef} from './categoryRef';
import {ProductOfferingRef} from './productOfferingRef';
import {TimePeriod} from './timePeriod';

/**
 * The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates. Skipped properties: id,href
 */
export interface CategoryCreate {
    /**
     * Description of the category
     */
    description?: string;
    /**
     * If true, this Boolean indicates that the category is a root of categories
     */
    isRoot?: boolean;
    /**
     * Date and time of the last update
     */
    lastUpdate?: Date;
    /**
     * Used to indicate the current lifecycle status
     */
    lifecycleStatus?: string;
    /**
     * Name of the category
     */
    name: string;
    /**
     * Unique identifier of the parent category
     */
    parentId?: string;
    /**
     * Category version
     */
    version?: string;
    /**
     * A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information.
     */
    productOffering?: Array<ProductOfferingRef>;
    /**
     * The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other (sub-)categories and/or product offerings.
     */
    subCategory?: Array<CategoryRef>;
    /**
     * The period for which the category is valid
     */
    validFor?: TimePeriod;
    /**
     * When sub-classing, this defines the super-class
     */
    baseType?: string;
    /**
     * A URI to a JSON-Schema file that defines additional attributes and relationships
     */
    schemaLocation?: string;
    /**
     * When sub-classing, this defines the sub-class Extensible name
     */
    type?: string;
}
