/**
 * Shopping Cart
 * **TMF API Reference : TMF - 663 Shopping Cart**  **Release : 19.0 - June 2019**  The Shoppoing Cart API provides a standardized mechanism for the management of shopping carts. Including creation, update, retrieval, deletion and notification of event.  Shopping Cart entity is used for the temporarily selection and reservation of product offerings in e-commerce and retail purchase.  Shopping cart supports purchase of both tangible and intangible goods and service (e.g. handset, telecom network service). The charge includes the one-off fee such as the fee for handset and the recurring fee such as the fee of a network service.  Shopping Cart contains list of cart items, a reference to party or party role (e.g. customer) or contact medium in case of unknown customer, In addition the calculated total items price including promotions.   Copyright Â© TM Forum 2019. All Rights Reserved
 *
 * OpenAPI spec version: 4.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import {Price} from './price';
import {PriceAlteration} from './priceAlteration';
import {ProductOfferingPriceRef} from './productOfferingPriceRef';

/**
 * An amount, usually of money, that represents the actual price paid by the customer for this item. May represent the total price of the shopping cart or the total of the cart item depending on the relation
 */
export interface CartPrice {
    /**
     * A narrative that explains in detail the semantics of this order item price.
     */
    description?: string;
    /**
     * A short descriptive name such as \"Subscription price\".
     */
    name?: string;
    /**
     * A category that describes the price, such as recurring, discount, allowance, penalty, and so forth
     */
    priceType?: string;
    /**
     * Could be month, week...
     */
    recurringChargePeriod?: string;
    /**
     * Could be minutes, GB...
     */
    unitOfMeasure?: string;
    price?: Price;
    priceAlteration?: Array<PriceAlteration>;
    /**
     * An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time.
     */
    productOfferingPrice?: ProductOfferingPriceRef;
    /**
     * When sub-classing, this defines the super-class
     */
    baseType?: string;
    /**
     * A URI to a JSON-Schema file that defines additional attributes and relationships
     */
    schemaLocation?: string;
    /**
     * When sub-classing, this defines the sub-class entity name
     */
    type?: string;
}
