/**
 * Product Ordering
 * **TMF API Reference : TMF 622 - Product Ordering Management**  **Release : 19.0 - June 2019**  The Product Ordering API provides a standardized mechanism for placing a product order with all of the necessary order parameters. The API consists of a simple set of operations that interact with CRM/Order Negotiation systems in a consistent manner. A product order is created based on a product offer that is defined in a catalog. The product offer identifies the product or set of products that are available to a customer, and includes characteristics such as pricing, product options and market. This API provide a task based resource to request order cancellation.  The product order references the product offer and identifies any specific requests made by the customer.  **Product Order resource** A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa. Main Product Order attributes are its identifier, state, priority category (mass market, Enterprise, etc.) related dates (start, completion, etc.), related billing account, related parties and order items. Main Order Items (aka order lines) attributes are the ordered offering and product characteristics with the related action to be performed (e.g. add or delete the products), state, location information for delivery, order item price and price alteration.  Product Order API performs the following operations on product order :     -Retrieval of a product order or a collection of product orders depending on filter criteria     -Partial update of a product order (including updating rules)    -Creation of a product order (including default values and creation rules)    -Deletion of product order (for administration purposes)     -Notification of events on product order.  **cancelProductOrder resource** This resource is used to request a product order cancellation. Product Order API performs the following operations on product order :     -Retrieval of a cancel product order or a collection of cancel product orders     -Creation of a cancel product order     -Notification of events on cancel product order.   Copyright Â© TM Forum 2019. All Rights Reserved
 *
 * OpenAPI spec version: 4.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AgreementItemRef } from './agreementItemRef';
import { BillingAccountRef } from './billingAccountRef';
import { Characteristic } from './characteristic';
import { ProductOfferingRef } from './productOfferingRef';
import { ProductPrice } from './productPrice';
import { ProductRelationship } from './productRelationship';
import { ProductSpecificationRef } from './productSpecificationRef';
import { ProductStatusType } from './productStatusType';
import { ProductTerm } from './productTerm';
import { RelatedParty } from './relatedParty';
import { RelatedPlaceRefOrValue } from './relatedPlaceRefOrValue';
import { RelatedProductOrderItem } from './relatedProductOrderItem';
import { ResourceRef } from './resourceRef';
import { ServiceRef } from './serviceRef';

/**
 * A product to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation & @referredType are related to the product entity and not the RelatedProductRefOrValue class itself
 */
export interface ProductRefOrValue {
    /**
     * Unique identifier of the product
     */
    id?: string;
    /**
     * Reference of the product
     */
    href?: string;

    skuId?: string;

    subType?: string;
    /**
     * Is the description of the product. It could be copied from the description of the Product Offering.
     */
    description?: string;
    /**
     * If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering.
     */
    isBundle?: boolean;
    /**
     * If true, the product is visible by the customer.
     */
    isCustomerVisible?: boolean;
    /**
     * Name of the product. It could be the same as the name of the product offering
     */
    name?: string;
    /**
     * Is the date when the product was ordered
     */
    orderDate?: Date;
    /**
     * Is the serial number for the product. This is typically applicable to tangible products e.g. Broadband Router.
     */
    productSerialNumber?: string;
    /**
     * Is the date from which the product starts
     */
    startDate?: Date;
    /**
     * Is the date when the product was terminated
     */
    terminationDate?: Date;
    agreement?: Array<AgreementItemRef>;
    billingAccount?: BillingAccountRef;
    place?: Array<RelatedPlaceRefOrValue>;
    product?: Array<ProductRefOrValue>;
    productCharacteristic?: Array<Characteristic>;
    productOffering?: ProductOfferingRef;
    productOrderItem?: Array<RelatedProductOrderItem>;
    productPrice?: Array<ProductPrice>;
    productRelationship?: Array<ProductRelationship>;
    productSpecification?: ProductSpecificationRef;
    productTerm?: Array<ProductTerm>;
    realizingResource?: Array<ResourceRef>;
    realizingService?: Array<ServiceRef>;
    relatedParty?: Array<RelatedParty>;
    /**
     * Is the lifecycle status of the product.
     */
    status?: ProductStatusType;
    /**
     * When sub-classing, this defines the super-class
     */
    baseType?: string;
    /**
     * A URI to a JSON-Schema file that defines additional attributes and relationships
     */
    schemaLocation?: string;
    /**
     * When sub-classing, this defines the sub-class entity name
     */
    type?: string;
    /**
     * The actual type of the target instance when needed for disambiguation.
     */
    referredType?: string;

    '@type'?: string;
}
