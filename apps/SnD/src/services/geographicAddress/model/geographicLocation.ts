/**
 * API Place - GeographicAddress
 * ## TMF API Reference : TMF 673 - Place - Geographic Address Management ### Release : 19.5 - January 2020  The Geographic Address API provides a standardized client interface to an Address management system. It allows looking for worldwide addresses. It can also be used to validate geographic address data, to be sure that it corresponds to a real address.  ### Resources - GeographicAddress - GeographicSubAddress - GeographicAddressValidation - Hub  ### Operations Geographic Address Management API performs the following operations : - Retrieve a geographic address or a collection of geographic addresses - Retrieve a geographic sub-address - Create a geographic address validation - Retrieve, update and delete an existing  geographic address validation - Notify events on these resources
 *
 * OpenAPI spec version: 4.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of Point (addresses and locations), MultiPoint, LineString (streets, highways and boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the @type attribute to specify which of these is being specified by the geometry attribute.
 */
export interface GeographicLocation {
    /**
     * Unique identifier of the geographic location
     */
    id?: string;
    /**
     * An URI used to access to the geographic location resource
     */
    href?: string;
    /**
     * The name of the GeoJSON structure used in the geometry attribute
     */
    type: GeographicLocation.TypeEnum;
    /**
     * A bounding box array that contains the geometry. The axes order follows the axes order of the geometry
     */
    bbox?: Array<number>;
}
export namespace GeographicLocation {
    export type TypeEnum =
        | 'GeoJsonPoint'
        | 'GeoJsonMultiPoint'
        | 'GeoJsonLineString'
        | 'GeoJsonMultiLineString'
        | 'GeoJsonPolygon';
    export const TypeEnum = {
        GeoJsonPoint: 'GeoJsonPoint' as TypeEnum,
        GeoJsonMultiPoint: 'GeoJsonMultiPoint' as TypeEnum,
        GeoJsonLineString: 'GeoJsonLineString' as TypeEnum,
        GeoJsonMultiLineString: 'GeoJsonMultiLineString' as TypeEnum,
        GeoJsonPolygon: 'GeoJsonPolygon' as TypeEnum
    };
}
