/**
 * Product Catalog Management
 * ## TMF API Reference: TMF620 - Product Catalog Management  ### Release : 20.5 - March 2021  Product Catalog API is one of Catalog Management API Family. Product Catalog API goal is to provide a catalog of products.   ### Operations Product Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * OpenAPI spec version: 4.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Any } from './any';
import { TimePeriod } from './timePeriod';

/**
 * specification of a value (number or text or an object) that can be assigned to a Characteristic.
 */
export interface CharacteristicValueSpecification {
    /**
     * If true, the Boolean Indicates if the value is the default value for a characteristic
     */
    isDefault?: boolean;
    /**
     * An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\".
     */
    rangeInterval?: string;
    /**
     * A regular expression constraint for given value
     */
    regex?: string;
    /**
     * A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
     */
    unitOfMeasure?: string;
    /**
     * The low range value that a characteristic can take on
     */
    valueFrom?: number;
    /**
     * The upper range value that a characteristic can take on
     */
    valueTo?: number;
    /**
     * A kind of value that the characteristic value can take on, such as numeric, text and so forth
     */
    valueType?: string;
    /**
     * The period of time for which a value is applicable.
     */
    validFor?: TimePeriod;
    /**
     * A discrete value that the characteristic can take on, or the actual value of the characteristic
     */
    value?: Any;
    /**
     * When sub-classing, this defines the super-class
     */
    baseType?: string;
    /**
     * A URI to a JSON-Schema file that defines additional attributes and relationships
     */
    schemaLocation?: string;
    /**
     * When sub-classing, this defines the sub-class Extensible name
     */
    type?: string;

    skuId?: string;
}
