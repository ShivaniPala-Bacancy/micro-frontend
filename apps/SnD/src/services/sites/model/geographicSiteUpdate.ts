/**
 * Geographic Site
 * ## TMF API Reference : TMF 674 - Place - Geographic Site Management  ### Release : 19.5 - November 2019  This API covers the operations to manage (create, read, delete) sites that can be associated to a customer, an account, a service delivery or other entities. It defines a Site as a convenience class that allows to easily refer to places important to other entities, where a geographic place is the entity that can answer the question “where?”, allowing to determine where things are in relation to the earth's surface, and can be represented either in a textual structured way (geographic address) or as a geometry referred to a spatial reference system (geographic location).  ### Resources - GeographicSite - Hub  ### Operations Geographic Site API performs the following operations : - Retrieve a geographic site or a collection of geographic sites - Create a new site - Update a geographic site - Delete a geographic site - Notify events on geographic site  Copyright © TM Forum 2019. All Rights Reserved
 *
 * OpenAPI spec version: 4.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import {CalendarPeriod} from './calendarPeriod';
import {GeographicSiteRelationship} from './geographicSiteRelationship';
import {PlaceRefOrValue} from './placeRefOrValue';
import {RelatedParty} from './relatedParty';

/**
 *  Skipped properties: id,href
 */
export interface GeographicSiteUpdate {
    /**
     * A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]
     */
    code?: string;
    /**
     * Text describing additional information regarding the site
     */
    description?: string;
    /**
     * A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]
     */
    name?: string;
    /**
     * The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former
     */
    status?: string;
    calendar?: Array<CalendarPeriod>;
    place?: Array<PlaceRefOrValue>;
    relatedParty?: Array<RelatedParty>;
    siteRelationship?: Array<GeographicSiteRelationship>;
    /**
     * When sub-classing, this defines the super-class
     */
    baseType?: string;
    /**
     * A URI to a JSON-Schema file that defines additional attributes and relationships
     */
    schemaLocation?: string;
    /**
     * When sub-classing, this defines the sub-class entity name
     */
    type?: string;
}
